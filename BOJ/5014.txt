package coding_test;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class Main{
    static int F, S, G, U, D;
    static int[] visited;

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());

        F = Integer.parseInt(st.nextToken()); // 전체 층
        S = Integer.parseInt(st.nextToken()); // 시작 층
        G = Integer.parseInt(st.nextToken()); // 가야할 층
        U = Integer.parseInt(st.nextToken()); // 올라갈 수 있는 층 수
        D = Integer.parseInt(st.nextToken()); // 내려갈 수 있는 층 수

        visited = new int[F + 1];
        System.out.println(bfs());
    }

    static String bfs(){
        Queue<Integer> q = new LinkedList<>();
        q.add(S);
        visited[S] = 1;

        while (!q.isEmpty()){
            int cur = q.poll();
            if(cur == G) return String.valueOf(visited[cur] - 1);

            if(cur + U <= F && visited[cur + U] == 0){
                visited[cur + U] = visited[cur] + 1;
                q.add(cur + U);
            }

            if(cur - D > 0 && visited[cur - D] == 0){
                visited[cur - D] = visited[cur] + 1;
                q.add(cur - D);
            }
        }
        return "use the stairs";
    }
}
