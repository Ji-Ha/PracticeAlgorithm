package coding_test;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
    static int N;
    static int[] cards;
    static int[][] dp;
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;
        int t = Integer.parseInt(br.readLine());


        while(t-- > 0) {
            N = Integer.parseInt(br.readLine());
            cards = new int[N];
            dp = new int[N][N];
            st = new StringTokenizer(br.readLine());

            for(int i = 0; i < N; i++)
                cards[i] = Integer.parseInt(st.nextToken());

            System.out.println(pick(0, N - 1));
        }
    }

    public static int pick(int s, int e) {
        if(e - s  == 1) return cards[e] > cards[s] ? cards[e] : cards[s];
        if(s == e) return cards[s];
        if(dp[s][e] != 0) return dp[s][e];

        int left = Math.min(pick(s + 2, e), pick(s + 1, e - 1)) + cards[s];
        int right = Math.min(pick(s + 1, e - 1), pick(s, e - 2)) + cards[e];
        return dp[s][e] = Math.max(left, right);
    }
}
