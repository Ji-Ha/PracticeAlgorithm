package coding_test;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
    static int[][] board;
    static int N, M, ans = -1, value;
    private static double temp;
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        N = Integer.parseInt(st.nextToken());
        M = Integer.parseInt(st.nextToken());

        board = new int[N][M];

        for(int i = 0; i < N; i++) {
            String temp = br.readLine();
            for(int j = 0; j < M; j++)
                board[i][j] = temp.charAt(j) - '0';
        }

        for(int x = 0; x < N; x++) {
            for(int y = 0; y < M; y++) {
                for(int r = -N; r < N; r++) {
                    for(int c = -M; c < M; c++)
                        buildNumber(r, c, x, y);
                }
            }
        }
        System.out.println(ans);
    }

    static void buildNumber(int r, int c, int x, int y) {
        if(r == 0 && c == 0) return ;
        int i = x, j = y;
        value = 0;
        while(0 <= i && i < N && 0 <= j && j < M) {
            value *= 10;
            value += board[i][j];
            temp = Math.sqrt(value);
            if(temp - (int)temp == 0)
                ans = Math.max(ans, value);
            i += r;
            j += c;
        }
    }
}