package coding_test;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main{
    static int N, M, K;
    static int[][] dp = new int[101][101];
    static String ans = "";
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        N = Integer.parseInt(st.nextToken());
        M = Integer.parseInt(st.nextToken());
        K = Integer.parseInt(st.nextToken());

        if(count(N, M) < K) System.out.println(-1);
        else {
            getWord(N, M, K - 1);
            System.out.println(ans);
        }
    }

    public static void getWord(int a, int z, int skip){
        if(a == 0){
            for(int i = 0; i < z; i++) ans += 'z';
            return;
        }
        if(z == 0){
            for(int i = 0; i < a; i++) ans += 'a';
            return;
        }

        int index = dp[a - 1][z];
        if(skip < index) {
            ans += 'a';
            getWord(a - 1, z, skip);
        }
        else{
            ans += 'z';
            getWord(a, z - 1, skip - index);
        }
    }

    public static int count(int a, int z){
        if(a == 0 || z == 0) {
            dp[a][z] = 1;
            return 1;
        }

        if(dp[a][z] != 0) return dp[a][z];

        dp[a][z] = Math.min(count(a - 1, z) + count(a, z - 1), 1000000000 + 1);
        return dp[a][z];
    }
}
