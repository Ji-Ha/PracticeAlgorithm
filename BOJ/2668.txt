package coding_test;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.PriorityQueue;

public class Main{
    static int N, end;
    static int[] board;
    static boolean[] visited;
    static PriorityQueue<Integer> pq = new PriorityQueue<>();

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        N = Integer.parseInt(br.readLine());
        board = new int[N + 1];
        visited = new boolean[N + 1];

        for(int i = 1; i <= N; i++)
            board[i] = Integer.parseInt(br.readLine());

        for(int i = 1; i <= N; i++){
            visited[i] = true;
            end = i;
            dfs(i);
            visited[i] = false;
        }

        System.out.println(pq.size());
        for(int ans : pq)
            System.out.println(ans);
    }

    static void dfs(int p){
        if(board[p] == end) pq.add(end);

        if(!visited[board[p]]){
            visited[board[p]] = true;
            dfs(board[p]);
            visited[board[p]] = false;
        }
    }
}
