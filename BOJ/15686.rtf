{\rtf1\ansi\ansicpg949\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;\f1\fmodern\fcharset0 Courier-Oblique;}
{\colortbl;\red255\green255\blue255;\red191\green100\blue38;\red32\green32\blue32;\red153\green168\blue186;
\red133\green96\blue154;\red254\green187\blue91;\red86\green132\blue173;}
{\*\expandedcolortbl;;\csgenericrgb\c74902\c39216\c14902;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c60000\c65882\c72941;
\csgenericrgb\c52157\c37647\c60392;\csgenericrgb\c99608\c73333\c35686;\csgenericrgb\c33725\c51765\c67843;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \cb3 package \cf4 coding_test\cf2 ;\
\
import \cf4 java.io.BufferedReader\cf2 ;\
import \cf4 java.io.IOException\cf2 ;\
import \cf4 java.io.InputStreamReader\cf2 ;\
import \cf4 java.util.ArrayList\cf2 ;\
import \cf4 java.util.StringTokenizer\cf2 ;\
\
public class \cf4 Main\{\
    \cf2 static int 
\f1\i \cf5 N
\f0\i0 \cf2 , 
\f1\i \cf5 M
\f0\i0 \cf2 , 
\f1\i \cf5 R
\f0\i0 \cf2 , 
\f1\i \cf5 chicken_num
\f0\i0 \cf2 , 
\f1\i \cf5 ans 
\f0\i0 \cf4 = Integer.
\f1\i \cf5 MAX_VALUE
\f0\i0 \cf2 ;\
    static \cf4 ArrayList<location> 
\f1\i \cf5 chicken 
\f0\i0 \cf4 = \cf2 new \cf4 ArrayList<>()\cf2 ;\
    static \cf4 ArrayList<location> 
\f1\i \cf5 home 
\f0\i0 \cf4 = \cf2 new \cf4 ArrayList<>()\cf2 ;\
    static boolean\cf4 [] 
\f1\i \cf5 check
\f0\i0 \cf2 ;\
\
    static class \cf4 location\{\
        \cf2 int \cf5 x\cf2 , \cf5 y\cf2 ;\
\
        \cf6 location\cf4 (\cf2 int \cf4 x\cf2 , int \cf4 y)\{\
            \cf2 this\cf4 .\cf5 x \cf4 = x\cf2 ;\
            this\cf4 .\cf5 y \cf4 = y\cf2 ;\
        \cf4 \}\
    \}\
\
    \cf2 public static void \cf6 main\cf4 (String[] args) \cf2 throws \cf4 IOException \{\
        BufferedReader br = \cf2 new \cf4 BufferedReader(\cf2 new \cf4 InputStreamReader(System.
\f1\i \cf5 in
\f0\i0 \cf4 ))\cf2 ;\
        \cf4 StringTokenizer st = \cf2 new \cf4 StringTokenizer(br.readLine())\cf2 ;\
\
        
\f1\i \cf5 N 
\f0\i0 \cf4 = Integer.
\f1\i parseInt
\f0\i0 (st.nextToken())\cf2 ;\
        
\f1\i \cf5 M 
\f0\i0 \cf4 = Integer.
\f1\i parseInt
\f0\i0 (st.nextToken())\cf2 ;\
\
        int \cf4 temp\cf2 ;\
        for\cf4 (\cf2 int \cf4 i = \cf7 0\cf2 ; \cf4 i < 
\f1\i \cf5 N
\f0\i0 \cf2 ; \cf4 i++)\{\
            st = \cf2 new \cf4 StringTokenizer(br.readLine())\cf2 ;\
            for\cf4 (\cf2 int \cf4 j = \cf7 0\cf2 ; \cf4 j < 
\f1\i \cf5 N
\f0\i0 \cf2 ; \cf4 j++)\{\
                temp = Integer.
\f1\i parseInt
\f0\i0 (st.nextToken())\cf2 ;\
                if\cf4 (temp == \cf7 1\cf4 ) 
\f1\i \cf5 home
\f0\i0 \cf4 .add(\cf2 new \cf4 location(i\cf2 , \cf4 j))\cf2 ;\
                if\cf4 (temp == \cf7 2\cf4 ) 
\f1\i \cf5 chicken
\f0\i0 \cf4 .add(\cf2 new \cf4 location(i\cf2 , \cf4 j))\cf2 ;\
            \cf4 \}\
        \}\
\
        
\f1\i \cf5 chicken_num 
\f0\i0 \cf4 = 
\f1\i \cf5 chicken
\f0\i0 \cf4 .size()\cf2 ;\
        
\f1\i \cf5 check 
\f0\i0 \cf4 = \cf2 new boolean\cf4 [
\f1\i \cf5 chicken_num 
\f0\i0 \cf4 + \cf7 1\cf4 ]\cf2 ;\
\
        for\cf4 (\cf2 int \cf4 i = 
\f1\i \cf5 M
\f0\i0 \cf2 ; \cf4 i >= \cf7 1\cf2 ; \cf4 i--)\{\
            
\f1\i \cf5 R 
\f0\i0 \cf4 = i\cf2 ;\
            
\f1\i \cf4 combi
\f0\i0 (\cf7 0\cf2 , \cf7 0\cf4 )\cf2 ;\
        \cf4 \}\
\
        System.
\f1\i \cf5 out
\f0\i0 \cf4 .println(
\f1\i \cf5 ans
\f0\i0 \cf4 )\cf2 ;\
    \cf4 \}\
\
    \cf2 static void \cf6 combi\cf4 (\cf2 int \cf4 s\cf2 , int \cf4 d)\{\
        \cf2 if\cf4 (d == 
\f1\i \cf5 R
\f0\i0 \cf4 )\{\
            
\f1\i \cf5 ans 
\f0\i0 \cf4 = Math.
\f1\i min
\f0\i0 (
\f1\i \cf5 ans
\f0\i0 \cf2 , 
\f1\i \cf4 getMin
\f0\i0 ())\cf2 ;\
            return ;\
        \cf4 \}\
\
        \cf2 for\cf4 (\cf2 int \cf4 i = s\cf2 ; \cf4 i < 
\f1\i \cf5 chicken_num
\f0\i0 \cf2 ; \cf4 i++)\{\
            
\f1\i \cf5 check
\f0\i0 \cf4 [i] = \cf2 true;\
            
\f1\i \cf4 combi
\f0\i0 (i + \cf7 1\cf2 , \cf4 d + \cf7 1\cf4 )\cf2 ;\
            
\f1\i \cf5 check
\f0\i0 \cf4 [i] = \cf2 false;\
        \cf4 \}\
    \}\
\
    \cf2 static int \cf6 getMin\cf4 ()\{\
        \cf2 int \cf4 total = \cf7 0\cf2 , \cf4 temp\cf2 ;\
        for\cf4 (location l : 
\f1\i \cf5 home
\f0\i0 \cf4 )\{\
            temp = \cf7 2 \cf4 * 
\f1\i \cf5 N
\f0\i0 \cf2 ;\
            for\cf4 (\cf2 int \cf4 i = \cf7 0\cf2 ; \cf4 i < 
\f1\i \cf5 chicken_num
\f0\i0 \cf2 ; \cf4 i++)\{\
                \cf2 if\cf4 (!
\f1\i \cf5 check
\f0\i0 \cf4 [i]) \cf2 continue;\
                \cf4 temp = Math.
\f1\i min
\f0\i0 (temp\cf2 , 
\f1\i \cf4 calDir
\f0\i0 (l\cf2 , 
\f1\i \cf5 chicken
\f0\i0 \cf4 .get(i)))\cf2 ;\
            \cf4 \}\
            total += temp\cf2 ;\
            if\cf4 (total > 
\f1\i \cf5 ans
\f0\i0 \cf4 ) \cf2 return \cf4 total\cf2 ;\
        \cf4 \}\
        \cf2 return \cf4 total\cf2 ;\
    \cf4 \}\
\
    \cf2 static int \cf6 calDir\cf4 (location a\cf2 , \cf4 location b)\{\
        \cf2 return \cf4 Math.
\f1\i abs
\f0\i0 (a.\cf5 x \cf4 - b.\cf5 x\cf4 ) + Math.
\f1\i abs
\f0\i0 (a.\cf5 y \cf4 - b.\cf5 y\cf4 )\cf2 ;\
    \cf4 \}\
\}\
\
}